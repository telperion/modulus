<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				-------------------------------------------------------------
				-- Modeled pretty shamelessly after the WHY 401k structure --
				-------------------------------------------------------------
				
				fgcurcommand = 1;
				gBPM = 160.0;
				gOFF = -0.774;
				gTime = 0;
				gInitMods = false;
				--gInc = 0;
				
				gCurrentMessage = 1;
				gMessages = {
				{38.412,'Molding1'},
				{48.012,'Wiggle'},
				{76.812,'Molding2'},
				}
				
				-- Handles to graphical actors
				gHeaven = nil;
				gHeavenMuted = nil;
				gEarth = nil;
				gEarthGlow = nil;
				gPavement = {}; 		-- eventually to contain paving stones
				gSun = nil;
				gSunGlow = nil;
				gSunGradient = nil;
				-- {{L, R}, {L-Rxx, R-Rxx}, {L-xGB, R-xGB}};
				gFrond = {{nil, nil}, {nil, nil}, {nil, nil}};
				gTrunk = {{nil, nil}, {nil, nil}, {nil, nil}};
				gGraphicsReady = false;
				gGraphicsScale = 1;
				
				
				-- Beat start, Beat end, Mods, Player specific
				
				gMods = {
				
				--{0,0.700,'*10000 C0,*10000 Stealth','end'},
				{0,2000,'2.625x,-999999% Cover','end'},
					
				}
				
				gPlayers = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			-----------------------
			-- Player mod resets --
			-----------------------
			if not gInitMods then
				GAMESTATE:ApplyGameCommand('mod,clearall')
				gInitMods = true;
			end
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by TaroNuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(gMods) do
				startSec = v[1] * 60.0 / gBPM - gOFF;
				  endSec = v[2] * 60.0 / gBPM - gOFF;				  
				 diffSec = v[2] * 60.0 / gBPM;
				if gTime >= startSec then
					if (v[4] == 'len' and gTime <= (startSec + diffSec)) or (v[4] == 'end' and gTime <= endSec) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			-- essential for setup
 			if GAMESTATE:GetSongBeat()>=0 and fgcurcommand == 1 then	 				
 				table.insert(gPlayers,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
 				table.insert(gPlayers,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
 				fgcurcommand = fgcurcommand + 1;
 				
 				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
 				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
 				for i,v in pairs(gPlayers) do
 					if v then
 						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
 						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
--						for k,m in pairs(getmetatable(v)) do
--							Trace('Player has field '..k..'!');
--						end
						origX = v:GetX();
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(origX - SCREEN_CENTER_X);
						v:GetChild('Combo'):x(origX - SCREEN_CENTER_X);
						Trace('Player '..i..'\'s location is x='..v:GetX()..', y='..v:GetY()..'!');
						v:z(1);
 					end
 				end
 			end
			
			-- sample
			if GAMESTATE:GetSongBeat()>=190 and fgcurcommand == 12 then
				for i,v in pairs(gPlayers) do
					if v then
						
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if gHeaven ~= nil and not gGraphicsReady then
				Trace('Heaven sent');
				gHeaven:addy(80);
				gGraphicsReady = true;		
				SCREENMAN:GetTopScreen():SetDrawByZPosition(true);	
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(1.0 / 45.0);
		self:queuecommand('Update');
		end"

		RearrangeCommand="%function(self)
			SCREENMAN:GetTopScreen():SetDrawByZPosition(true);			
			SCREENMAN:GetTopScreen():GetChild('SongBackground'):z(0);
			SCREENMAN:GetTopScreen():GetChild('SongForeground'):z(1);			
			SCREENMAN:GetTopScreen():GetChild('Overlay'):z(2);
			Trace('Just set z for TopScreen children');
			
			for i,v in pairs(gPlayers) do
				if v then
					
				end
			end
			
			if GAMESTATE:IsPlayerEnabled(0) then
			   SCREENMAN:GetTopScreen():GetChild('PlayerP1'):z(5);
			end
			if GAMESTATE:IsPlayerEnabled(1) then
			   SCREENMAN:GetTopScreen():GetChild('PlayerP2'):z(5);
			end
		end"
	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); gTime = tonumber(self:GetText()); self:sleep(1.0 / 45.0); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Heaven (muted color) -->
	<Layer
		File="letmedrv-bg-muted.png"
		OnCommand="%function(self)
			gGraphicsScale = 1.0 / math.min(self:GetWidth() / SCREEN_WIDTH, self:GetHeight() / SCREEN_HEIGHT);
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT / 2);
			self:z(0.00);
			gHeavenMuted = self;
				self:diffuse(255,255,255,0);
			self:sleep(1000);
		end"
	/>
	<!-- Heaven (full color) -->
	<Layer
		File="letmedrv-bg.png"
		OnCommand="%function(self)
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT / 2);
			self:z(0.01);
			gHeaven = self;
			self:diffuse(255,255,255,0);
			--self:decelerate(20);
			--self:diffusealpha(1);
			self:sleep(1000);
		end"
	/>
	
	
	<!-- Sun (sharp) -->
	<Layer
		File="letmedrv-sun-white.png"
		OnCommand="%function(self)
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT / 2);
			self:z(0.02);
			gSun = self;
			self:sleep(1000);
		end"
	/>
	<!-- Sun (glow) -->
	<Layer
		File="letmedrv-sun-bloom.png"
		OnCommand="%function(self)
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT / 2);
			self:z(0.03);
			self:blend('noeffect');
			self:zwrite(1);
			gSunGlow = self;
			self:sleep(1000);
		end"
	/>
	<!-- Sun (gradient) -->
	<Layer
		File="letmedrv-sun-grad.png"
		OnCommand="%function(self)
			self:zoom(0.333);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT / 2);
			self:z(0.04);
			self:ztestmode('writeonpass');
			gSunGradient = self;
			self:sleep(1000);
		end"
	/>
	
	
</children></ActorFrame>