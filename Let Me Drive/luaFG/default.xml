<ActorFrame><children>

	<!------------------------------------------------------------------------>
	<!--
	
		Nhato - "Let Me Drive" (3:27)
		SX 10; S[Cinematic Mode] 0
		
		Simfiled and scripted for SMH 2: Stepcharts Made Doubly Horrible!
		If you found this simfile lonely, look up tourney packs from the
		SMH/SPERGIN series, as well as its east coast analogue, DOWNS/UPS.
					
		The night sky is composed from a photograph found unsourced on
		Google Images. All other graphic assets are from scratch using
		Inkscape and GIMP.
		Animation code follows a structure designed by WinDEU and TaroNuke.
		
		For any questions, please contact Telperion (@RI74TA on twitter,
		Telperion on AIJ/r21freak/Z-I-v/GitHub).
		
		Thanks for reading, and hope you enjoy!
			-- Telperion
				
																			-->
	<!------------------------------------------------------------------------>

	<!--	I'M THE FOREGROUND	  -->
	<!--	I'M THE FOREGROUND	  -->
	<!--	I'M THE FOREGROUND	  -->

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="%function(self)
				self:hidden(1);
				
				-------------------------------------------------------------
				-- Modeled pretty shamelessly after the WHY 401k structure --
				-------------------------------------------------------------
				
				fgcurcommand = 1;
				gBPM = 160.0;
				gOFF = -0.774;
				gTime = 0;
				gInitMods = false;
				--gInc = 0;
				
				gCurrentMessage = 1;
				gMessages = {
				{38.412,'Molding1'},
				{48.012,'Wiggle'},
				{76.812,'Molding2'},
				}
				
				-- Handles to graphical actors
				gHeaven = nil;
				gHeavenMuted = nil;
				gEarth = nil;
				gEarthClip = nil;
				gEarthGlow = nil;
				gPavement = {}; 		-- eventually to contain paving stones
				gSun = {};				-- eventually to contain glow rings
				gSunGradient = {};
				-- {{L-Rxx, L, L-xGB}, {R-Rxx, R, R-xGB}};
				gFrond = {{nil, nil, nil}, {nil, nil, nil}};
				gTrunk = {{nil, nil, nil}, {nil, nil, nil}};
				gGraphicsReady = false;
				gGraphicsScale = 1.0 / math.min(1280 / SCREEN_WIDTH, 960 / SCREEN_HEIGHT);
								
				-- Motion master parameters
				gMoving				= false;
				gDriving			= 0;
				gMotionEase			= 0.0;
				gMotionTaps       	= {5.0, 8.0, 13.0, 21.0, 34.0};
				gMotionTapsRecip  	= {};
				gMotionTapsPeriod 	= {};
				gMotionTapsSign 	= {};
				gMotionExtent = 0;
				for i = 1, table.getn(gMotionTaps) do
					table.insert(gMotionTapsRecip, 1, 1.0 / gMotionTaps[i]);
					table.insert(gMotionTapsPeriod, 2.0 * math.pi / gMotionTaps[i]);
					table.insert(gMotionTapsSign,   math.random(2) * 2 - 1);
					gMotionExtent = gMotionExtent + 1.0 / gMotionTaps[i];
				end	
				MotionMaster = function(t)
					motionResult = 0;
					for i = 1, table.getn(gMotionTaps) do
						motionResult = motionResult + gMotionTapsSign[i] * gMotionTapsRecip[i] * math.sin(gMotionTapsPeriod[i] * t);
					end	
					motionResult = motionResult / gMotionExtent;
					motionResultIntermediate = math.exp(2.0 * motionResult);
					motionResultBounded = (motionResultIntermediate - 1) / (motionResultIntermediate + 1);					
					return motionResultBounded;
				end;
				
				-- Pavement scaling and placement
				gPavementScalars = {};
				for i = 0, 11 do
					table.insert(gPavementScalars, math.pow(2.0, i/12.0));
				end				
				gPavementCenters = {};
				for i = 0, 12 do
					table.insert(gPavementCenters, 0);
				end
			
				-- Beat start, Beat end, Mods, Player specific
				
				gMods = {
				
				--{0,0.700,'*10000 C0,*10000 Stealth','end'},
				{0,   40,  '2.625x,-999999% Cover,*1000 dark','end'},
				{40,  72,  '*0.1 no dark','end'},
				{272, 336, '*1000 dark','end'},
				{336, 340, '*0.3 no dark','end'},
				{272, 336, '*1000 dark','end'},
				{336, 340, '*0.3 no dark','end'},
				{344, 352, '*0.5 dark','end'},
				{352, 356, '*0.3 no dark','end'},
				{527, 544, '*0.18 100% stealth','end'},
				{544, 560, '*1000 dark','end'},
				}
				
				
				ScaleFunction = function(lo, hi, t) return (t - lo) / (hi - lo); end;
				ModulusFunction = function(dividend, divisor) return dividend - math.floor(dividend/divisor)*divisor; end;
				
				gPlayers = {};
				
				SCREENMAN:GetTopScreen():SetDrawByZPosition(true);	
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			-----------------------
			-- Player mod resets --
			-----------------------
			if not gInitMods then
				GAMESTATE:ApplyGameCommand('mod,clearall');
				gInitMods = true;
			end
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by TaroNuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(gMods) do
				startSec = v[1] * 60.0 / gBPM - gOFF;
				  endSec = v[2] * 60.0 / gBPM - gOFF;				  
				 diffSec = v[2] * 60.0 / gBPM;
				if gTime >= startSec then
					if (v[4] == 'len' and gTime <= (startSec + diffSec)) or (v[4] == 'end' and gTime <= endSec) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			-- essential for setup
 			if GAMESTATE:GetSongBeat()>=0 and fgcurcommand == 1 then		
 				table.insert(gPlayers,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
 				table.insert(gPlayers,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
 				fgcurcommand = fgcurcommand + 1;
 				
 				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
 				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
 				for i,v in pairs(gPlayers) do
 					if v then
 						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
 						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						origX = SCREEN_WIDTH * (0.5 * i - 0.25);
						v:x(SCREEN_CENTER_X);
						v:addy(SCREEN_HEIGHT / -8.0);
						v:GetChild('Judgment'):x(origX - SCREEN_CENTER_X);
						v:GetChild('Combo'):hidden(1);
						Trace('Player '..i..'\'s location is x='..v:GetX()..', y='..v:GetY()..'!');
						v:z(1 + math.random() * 0.01);
 					end
 				end
 			end
			
			
			gBeat = GAMESTATE:GetSongBeat();
			
			-- Ease in and out of windy roads.
			if gBeat >= 136 and gBeat < 144 then
				gMoving = true;
				gMotionEase = ScaleFunction(136, 144, gBeat);
			elseif gBeat >= 144 and gBeat < 264 then
				gMoving = true;
				gMotionEase = 1.0;
			elseif gBeat >= 264 and gBeat < 272 then
				gMoving = true;
				gMotionEase = ScaleFunction(272, 264, gBeat);
			elseif gBeat >= 272 and gBeat < 432 then
				gMoving = false;
				gMotionEase = 0.0;
				
			elseif gBeat >= 432 and gBeat < 440 then
				gMoving = true;
				gMotionEase = ScaleFunction(432, 440, gBeat);
			elseif gBeat >= 440 and gBeat < 528 then
				gMoving = true;
				gMotionEase = 1.0;
			elseif gBeat >= 528 and gBeat < 544 then
				gMoving = true;
				gMotionEase = ScaleFunction(528, 544, gBeat);
				gMotionEase = 1.0 - gMotionEase*gMotionEase;
			elseif gBeat >= 544 then
				gMoving = false;
				gMotionEase = 0.0;
				
			else	
--				gMoving = true;
--				gMotionEase = 1.0;
			end
			
			
			-- Manipulate heaven.
			if gGraphicsReady then
					-- First verse rising.
				if gBeat >= 0 and gBeat < 8 then
					gHeavenMuted:diffusealpha(  ScaleFunction(0, 8, gBeat)  );
					gHeaven:diffusealpha(0);
				elseif gBeat >= 8 and gBeat < 40 then
					gHeavenMuted:diffusealpha(1);
					gHeaven:diffusealpha(  ScaleFunction(8, 40, gBeat)  );
				
					-- Why can't you let me go.
					-- And let me drive.
				elseif gBeat >= 336 and gBeat < 340 then
					gHeavenMuted:diffusealpha(0);
					gHeaven:diffusealpha(0);
				elseif gBeat >= 340 and gBeat < 356 then
					gHeavenMuted:diffusealpha(  ScaleFunction(340, 356, gBeat)  );
					gHeaven:diffusealpha(0);
				elseif gBeat >= 356 and gBeat < 364 then
					gHeavenMuted:diffusealpha(0);
					gHeaven:diffusealpha(0);
				
					-- Second verse rising.
				elseif gBeat >= 364 and gBeat < 368 then
					gHeavenMuted:diffusealpha(  ScaleFunction(364, 368, gBeat)  );
					gHeaven:diffusealpha(0);
				elseif gBeat >= 368 and gBeat < 400 then
					gHeavenMuted:diffusealpha(1);
					gHeaven:diffusealpha(  ScaleFunction(368, 400, gBeat)  );
					
					-- thu-THUMP
				elseif (gBeat >= 208 and gBeat < 208.5) or
					   (gBeat >= 504 and gBeat < 504.5) then
					gHeavenMuted:diffusealpha(0);
					gHeaven:diffusealpha(0);
					gBeat = math.floor(gBeat * 2) / 2;				-- ooh...
				elseif (gBeat >= 208.5 and gBeat < 209) or
					   (gBeat >= 504.5 and gBeat < 505) then
					gHeavenMuted:diffusealpha(1);
					gHeaven:diffusealpha(0);
					gBeat = math.floor(gBeat * 2) / 2;				-- ooh...
				
					-- Shutdown.
				elseif gBeat >= 528 and gBeat < 544 then
					gHeavenMuted:diffusealpha(1);
					gHeaven:diffusealpha(  ScaleFunction(544, 528, gBeat)  );
				elseif gBeat >= 544 or gBeat < 8 then
					gHeavenMuted:diffusealpha(0);
					gHeaven:diffusealpha(0);
					
					-- Default values.
				else
					gHeavenMuted:diffusealpha(1);
					gHeaven:diffusealpha(1);
				end
			end
			
			
			-- Manipulate sun.
			if gGraphicsReady then
				-- First verse rising.
				if gBeat >= 8 and fgcurcommand == 2 then
					fgcurcommand = fgcurcommand + 1;
					for i,v in pairs(gSun) do
						v:decelerate((32 + 0.5 * i) * 60.0 / gBPM);
						v:y(SCREEN_HEIGHT * 0.9);
					end
					gEarthGlow:decelerate(32 * 60.0 / gBPM);
					gEarthGlow:y(SCREEN_HEIGHT * 0.7);
				end			

				-- I'm jk this isn't all about the stupid SUN!
				-- dumbfuck heatball that peels my skin. piss lamp of the aether
				if gBeat >= 255 and fgcurcommand == 3 then
					fgcurcommand = fgcurcommand + 1;
					for j,w in pairs(gTrunk) do
						for i,v in pairs(w) do
							v:zoomx(v:GetZoomX() * -1);
						end
					end
					for j,w in pairs(gFrond) do
						for i,v in pairs(w) do
							v:zoomx(v:GetZoomX() * -1);
						end
					end
				end
				if gBeat >= 256 and fgcurcommand == 4 then
					fgcurcommand = fgcurcommand + 1;
					for j,w in pairs(gTrunk) do
						for i,v in pairs(w) do
							v:zoomx(v:GetZoomX() * -1);
						end
					end
					for j,w in pairs(gFrond) do
						for i,v in pairs(w) do
							v:zoomx(v:GetZoomX() * -1);
						end
					end
				end						
				
				-- Why can't you let me go.
				-- And let me drive.
				if gBeat >= 272 and fgcurcommand == 5 then
					fgcurcommand = fgcurcommand + 1;
					for i,v in pairs(gSun) do
						v:accelerate((64 + 0.5 * i) * 60.0 / gBPM);
						v:y(SCREEN_HEIGHT + v:GetHeight() / 2);
					end
					gEarthGlow:accelerate(64 * 60.0 / gBPM);
					gEarthGlow:y(SCREEN_HEIGHT * 0.4);
				end
				
				-- Second verse rising.
				if gBeat >= 368 and fgcurcommand == 6 then
					fgcurcommand = fgcurcommand + 1;
					for i,v in pairs(gSun) do
						v:decelerate((32 + 0.5 * i) * 60.0 / gBPM);
						v:y(SCREEN_HEIGHT * 0.9);
					end
					for i,v in pairs(gSunGradient) do
						v:accelerate((64 + 0.5 * i) * 60.0 / gBPM);
						v:y(SCREEN_HEIGHT * 0.9);
					end
					gEarthGlow:decelerate(32 * 60.0 / gBPM);
					gEarthGlow:y(SCREEN_HEIGHT * 0.7);
				end		
			end
			
			
			-- Manipulate trees.
			if gGraphicsReady then
				alphaBlur = 0;
				alphaSharp = 0;
				alphaLeft = 1;
				alphaRight = 1;				
				
				   -- Snap your fingers and fade some trees.
				   -- ...God, that sounds so Washingtonian.
				if (gBeat >= 10 and gBeat < 132) or
				   (gBeat >= 274 and gBeat < 334) or
				   (gBeat >= 370 and gBeat < 428) then
					alphaCommon = ScaleFunction(2, 10, gBeat);
					alphaBlur = 1 - (alphaCommon - math.floor(alphaCommon));
					alphaSharp = alphaBlur * 0.6 + 0.4;
					
					-- aaaaaaAAAAAA~ (onpu)
				elseif gBeat >= 132 and gBeat < 136 then
					alphaCommon = ScaleFunction(132, 136, gBeat);
					alphaSharp = 0.85 - 0.15 * alphaCommon;
					alphaBlur = 0.75 + 0.25 * alphaCommon;
				elseif gBeat >= 334 and gBeat < 336 then
					alphaCommon = ScaleFunction(334, 336, gBeat);
					alphaSharp = 0.7;
					alphaBlur = 0.5 + 0.5 * alphaCommon;
				elseif gBeat >= 428 and gBeat < 432 then
					alphaCommon = ScaleFunction(428, 432, gBeat);
					alphaSharp = 0.85 - 0.15 * alphaCommon;
					alphaBlur = 0.75 + 0.25 * alphaCommon;
					
					-- Why can't you let me go.
					-- And let me drive.
				elseif gBeat >= 356 and gBeat < 364 then
					alphaSharp = 0;
					alphaBlur = 0;
				
					-- Second verse rising.
				elseif gBeat >= 364 and gBeat < 368 then
					alphaCommon = ScaleFunction(368, 364, gBeat);
					alphaSharp = 0.7 * (1 - alphaCommon*alphaCommon);
					alphaBlur = 1 - alphaCommon;
					
					
					-- Subtle pause in the music.
				elseif gBeat >= 144 and gBeat < 145 then
					alphaCommon = ScaleFunction(145, 144, gBeat);
					alphaSharp = 0.7 * alphaCommon;
					alphaBlur = alphaCommon;
				elseif gBeat >= 440 and gBeat < 441 then
					alphaCommon = ScaleFunction(441, 440, gBeat);
					alphaSharp = 0.7 * alphaCommon;
					alphaBlur = alphaCommon;
				elseif (gBeat >= 176 and gBeat < 176.5) or
					   (gBeat >= 239 and gBeat < 239.5) or
					   (gBeat >= 472 and gBeat < 472.5) then
					alphaSharp = 0;
					alphaBlur = 0;
					gBeat = math.floor(gBeat * 2) / 2;				-- ooh...
				elseif (gBeat >= 176.5 and gBeat < 177) or
					   (gBeat >= 239.5 and gBeat < 240) or
					   (gBeat >= 472.5 and gBeat < 473) then
					alphaSharp = 0;
					alphaBlur = 0.5;
					gBeat = math.floor(gBeat * 2) / 2;				-- ooh...
				
					-- Shutdown.
				elseif gBeat >= 544 or gBeat < 8 then
					alphaSharp = 0;
					alphaBlur = 0;
					
					-- Default values.
				else
					alphaSharp = 0.7;
					alphaBlur = 1.0;
					alphaLeft = 1.0;
					alphaRight = 1.0;
				end
					
				gFrond[1][2]:diffusealpha(alphaSharp * alphaLeft);
				gFrond[2][2]:diffusealpha(alphaSharp * alphaRight);
				
				gFrond[1][1]:diffusealpha(alphaBlur * alphaLeft);
				gFrond[2][1]:diffusealpha(alphaBlur * alphaRight);
				
				gFrond[1][3]:diffusealpha(alphaBlur * alphaLeft);
				gFrond[2][3]:diffusealpha(alphaBlur * alphaRight);
				
				gTrunk[1][2]:diffusealpha(alphaSharp * alphaLeft);
				gTrunk[2][2]:diffusealpha(alphaSharp * alphaRight);
				
				gTrunk[1][1]:diffusealpha(alphaBlur * alphaLeft);
				gTrunk[2][1]:diffusealpha(alphaBlur * alphaRight);
				
				gTrunk[1][3]:diffusealpha(alphaBlur * alphaLeft);
				gTrunk[2][3]:diffusealpha(alphaBlur * alphaRight);
			end
			
			
			if gBeat >= 255 and gBeat < 256 then
				gBeat = 255 + (gBeat-255)*(gBeat-255);				-- ooh...
			end
			
			
			if gHeaven ~= nil and not gGraphicsReady then
				Trace('Heaven sent');
				for i,v in pairs(gPavement) do
					Trace('PavementStone '..i..'!');
					v:y(SCREEN_HEIGHT * 0.8 + SCREEN_HEIGHT / 60.0 * (i - 0.5));
				end
				gGraphicsReady = true;		
			end
			
			
			-- Set the road in motion by cycling the paving stones' Y positions and X scales.
			if gGraphicsReady then
				gDriving = gDriving + 1;
				
				if not gMoving then
					for i,v in pairs(gPavement) do
						gApparentIndex = (i + gDriving);
						gApparentIndex = ModulusFunction(gApparentIndex, 12) + 1;
						zoomFactor = gGraphicsScale * gPavementScalars[gApparentIndex];
						v:zoomx( zoomFactor );
						v:y(SCREEN_HEIGHT * 0.8 + SCREEN_HEIGHT / 60.0 * (gApparentIndex - 0.5));
					end
				end
				
				-- Use the motion master function to shift the X position of all earth objects.
				if gMoving then
					gBeatSlow = gBeat;
					commonSway = MotionMaster(gBeatSlow);
					
					-- Pavement movement and skewing.
					for i = 1, table.getn(gPavementCenters) do
						gPavementCenters[i] = gMotionEase * MotionMaster(gBeatSlow - (i-1) / 6.0) * SCREEN_WIDTH * 0.3 + SCREEN_CENTER_X
					end
					for i,v in pairs(gPavement) do
						gApparentIndex = (i + gDriving);
						gApparentIndex = ModulusFunction(gApparentIndex, 12) + 1;
						centerAverage  = (gPavementCenters[gApparentIndex + 1] + gPavementCenters[gApparentIndex]) / 2.0;
						centerDistance = (gPavementCenters[gApparentIndex + 1] - gPavementCenters[gApparentIndex]);
						skewFactor = centerDistance / v:GetHeight();
						zoomFactor = gGraphicsScale * gPavementScalars[gApparentIndex];
						v:zoomx( zoomFactor );
						v:skewx( skewFactor / zoomFactor );
						v:x(  centerAverage );
						v:y(SCREEN_HEIGHT * 0.8 + SCREEN_HEIGHT / 60.0 * (gApparentIndex - 0.5));
					end			
					for i,v in pairs(gPlayers) do
						if v then
							newPlayerX = gMotionEase * commonSway * SCREEN_WIDTH * 0.3 + SCREEN_CENTER_X;
							newJCX = SCREEN_WIDTH * (0.5 * i - 0.25);
							v:x( newPlayerX );
							v:GetChild('Judgment'):x(newJCX - newPlayerX);
						end
					end
					for i,vGroup in pairs(gTrunk) do
						for j,v in pairs(vGroup) do
							v:x( gMotionEase * MotionMaster(gBeatSlow + 0.1 - j * 0.25) * SCREEN_WIDTH * 0.05 + SCREEN_WIDTH * (0.5 * i - 0.25) );
						end
					end
					for i,vGroup in pairs(gFrond) do
						for j,v in pairs(vGroup) do
							v:x( gMotionEase * MotionMaster(gBeatSlow + 0.1 - j * 0.25) * SCREEN_WIDTH * 0.05 + SCREEN_WIDTH * (0.5 * i - 0.25) );
						end
					end
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
			self:sleep(0.02);
			self:queuecommand('Update');
		end"
	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); gTime = tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	
	<!-- Earth -->
	<Layer
		File="blacksquare.png"
		OnCommand="%function(self)
			self:stretchto(0, SCREEN_HEIGHT * 0.8, SCREEN_WIDTH, SCREEN_HEIGHT);
			self:z(1);
			gEarth = self;
			Trace('blacksquare '..gGraphicsScale..' ('..self:GetWidth()..', '..self:GetHeight()..')!');
		end"
	/>
	
	
	<!-- Paving stones -->
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-B.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-C.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-A.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-B.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	<Layer
		File="letmedrv-road-C.png"
		OnCommand="%function(self) 
			self:zoom(gGraphicsScale);
			self:x(SCREEN_WIDTH / 2);
			self:y(SCREEN_HEIGHT);
			self:z(1.1);
			table.insert(gPavement, self);
		end"
	/>
	
	
	<!-- Earth clipper -->
	<Layer
		File="blacksquare.png"
		OnCommand="%function(self)
			self:stretchto(0, SCREEN_HEIGHT * 0.8, SCREEN_WIDTH, SCREEN_HEIGHT);
			self:z(1);
			gEarthClip = self;
			self:clearzbuffer(1);
			self:blend('noeffect');
			self:zwrite(1);
		end"
	/>	
	<!-- Earth glow -->
	<Layer
		File="letmedrv-sun-bloom.png"
		OnCommand="%function(self)
			self:zoomx(gGraphicsScale);
			self:zoomy(gGraphicsScale / 2);
			self:x(SCREEN_CENTER_X);
			self:y(SCREEN_HEIGHT * 0.4);
			self:z(1.2);
			self:ztestmode('writeonfail');
			self:blend('add');
			self:diffusealpha(0.15);
			gEarthGlow = self;
		end"
	/>
	
</children></ActorFrame>